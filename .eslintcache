[{"D:\\Archive\\University\\sem3\\ITS\\inventory-system-frontend\\src\\App.js":"1","D:\\Archive\\University\\sem3\\ITS\\inventory-system-frontend\\src\\components\\header\\Nav.js":"2","D:\\Archive\\University\\sem3\\ITS\\inventory-system-frontend\\src\\components\\pages\\Login.js":"3","D:\\Archive\\University\\sem3\\ITS\\inventory-system-frontend\\src\\components\\pages\\Register.js":"4","D:\\Archive\\University\\sem3\\ITS\\inventory-system-frontend\\src\\components\\pages\\Home.js":"5","D:\\Archive\\University\\sem3\\ITS\\inventory-system-frontend\\src\\index.js":"6","D:\\Archive\\University\\sem3\\ITS\\inventory-system-frontend\\src\\js\\ScrollToTop.js":"7","D:\\Archive\\University\\sem3\\ITS\\inventory-system-frontend\\src\\components\\pages\\Dashboard.js":"8","D:\\Archive\\University\\sem3\\ITS\\inventory-system-frontend\\src\\components\\Item.js":"9","D:\\Archive\\University\\sem3\\ITS\\inventory-system-frontend\\src\\ProtectedRoute.js":"10","D:\\Archive\\University\\sem3\\ITS\\inventory-system-frontend\\src\\authentication\\auth.js":"11","D:\\Archive\\University\\sem3\\ITS\\inventory-system-frontend\\src\\serviceWorker.js":"12","D:\\Archive\\University\\sem3\\ITS\\inventory-system-frontend\\src\\components\\footer\\Footer.js":"13","D:\\Archive\\University\\sem3\\ITS\\inventory-system-frontend\\src\\components\\SearchBox.js":"14","D:\\Archive\\University\\sem3\\ITS\\inventory-system-frontend\\src\\AuthorizedRoute.js":"15","D:\\Archive\\University\\sem3\\ITS\\inventory-system-frontend\\src\\components\\pages\\Management.js":"16","D:\\Archive\\University\\sem3\\ITS\\inventory-system-frontend\\src\\components\\pages\\Statistics.js":"17","D:\\Archive\\University\\sem3\\ITS\\inventory-system-frontend\\src\\components\\pages\\ItemDetailed.js":"18","D:\\Archive\\University\\sem3\\ITS\\inventory-system-frontend\\src\\components\\Chat.js":"19","D:\\Archive\\University\\sem3\\ITS\\inventory-system-frontend\\src\\components\\ChatMessage.js":"20","D:\\Archive\\University\\sem3\\ITS\\inventory-system-frontend\\src\\components\\pages\\ChatRoom.js":"21"},{"size":2677,"mtime":1609696203872,"results":"22","hashOfConfig":"23"},{"size":3419,"mtime":1607620997891,"results":"24","hashOfConfig":"23"},{"size":3785,"mtime":1607531134119,"results":"25","hashOfConfig":"23"},{"size":6646,"mtime":1607540181561,"results":"26","hashOfConfig":"23"},{"size":1483,"mtime":1607539687618,"results":"27","hashOfConfig":"23"},{"size":522,"mtime":1607014566494,"results":"28","hashOfConfig":"23"},{"size":401,"mtime":1606354211605,"results":"29","hashOfConfig":"23"},{"size":10020,"mtime":1608046875458,"results":"30","hashOfConfig":"23"},{"size":1749,"mtime":1608045564042,"results":"31","hashOfConfig":"23"},{"size":622,"mtime":1607528674822,"results":"32","hashOfConfig":"23"},{"size":706,"mtime":1607616847500,"results":"33","hashOfConfig":"23"},{"size":5086,"mtime":499162500000,"results":"34","hashOfConfig":"23"},{"size":337,"mtime":1606407700772,"results":"35","hashOfConfig":"23"},{"size":558,"mtime":1608044087598,"results":"36","hashOfConfig":"23"},{"size":702,"mtime":1607616847500,"results":"37","hashOfConfig":"23"},{"size":378,"mtime":1607617393606,"results":"38","hashOfConfig":"23"},{"size":378,"mtime":1607619984006,"results":"39","hashOfConfig":"23"},{"size":1873,"mtime":1608048526042,"results":"40","hashOfConfig":"23"},{"size":2556,"mtime":1609878851293,"results":"41","hashOfConfig":"23"},{"size":392,"mtime":1609878423321,"results":"42","hashOfConfig":"23"},{"size":400,"mtime":1609875656325,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"47"},"zofdld",{"filePath":"48","messages":"49","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"47"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"64"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"60"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"D:\\Archive\\University\\sem3\\ITS\\inventory-system-frontend\\src\\App.js",["96"],"import React, { useEffect, useState, useCallback } from 'react';\nimport { BrowserRouter as Router, Switch, Route, Redirect } from 'react-router-dom';\nimport './App.css';\n\n// Importing components\nimport ProtectedRoute from './ProtectedRoute';\nimport AuthorizedRoute from './AuthorizedRoute';\n\nimport Dashboard from './components/pages/Dashboard';\nimport Management from './components/pages/Management';\nimport Statistics from './components/pages/Statistics';\nimport Home from './components/pages/Home';\nimport Nav from './components/header/Nav';\nimport Footer from './components/footer/Footer';\nimport Login from './components/pages/Login';\nimport Register from './components/pages/Register';\nimport ScrollToTop from './js/ScrollToTop';\nimport ItemDetailed from './components/pages/ItemDetailed';\nimport ChatRoom from './components/pages/ChatRoom';\n\nconst App = () => {\n\n\tconst [user, setUser] = useState(localStorage.getItem(\"user\"));\n\t\n\tconst authenticateUser = useCallback(() => {\n\t\tfetch('http://localhost:9090/inventory/users/user', {\n\t\tmode: 'cors',\n\t\tmethod: 'GET',\n\t\theaders: new Headers({\n\t\t\t'Authorization': `Bearer ${localStorage.getItem('token')}`,\n\t\t\t'Accept': 'application/json',\n\t\t\t}) \n\t\t})\n\t\t.then(response => {\n\t\t\tif (response.ok) {\n\t\t\t\treturn response.json();\n\t\t\t}\n\t\t\telse {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t})\n\t\t.then(response => {\n\t\t\tif (response != null) {\n\t\t\t\tsetUser(JSON.stringify(response));\n\t\t\t\tlocalStorage.setItem(\"user\", JSON.stringify(response));\n\t\t\t\tlocalStorage.setItem(\"warehouseId\", response.warehouseId);\n\t\t\t}\n\t\t})\n\t},[]);\n\n\tuseEffect (() => {\n\t\tif(!user) {\n\t\t\tconsole.log(\"login\");\n\t\t\tauthenticateUser();\n\t\t}\n    }, [user])\n\n\tvar convertedUser = JSON.parse(user);\n\n\treturn (\n\t\t<Router>\n\t\t\t<div>\n\t\t\t\t<Nav user={convertedUser} setUser={setUser}/>\n\t\t\t\t\t<ScrollToTop>\n\t\t\t\t\t\t\t<Switch>\n\t\t\t\t\t\t\t\t<Route exact path=\"/\" component={() => <Home user={convertedUser}/>}/>\n\t\t\t\t\t\t\t\t<ProtectedRoute exact path=\"/dashboard\" component={() => <Dashboard user={convertedUser}/>} />\n\t\t\t\t\t\t\t\t<ProtectedRoute exact path=\"/dashboard/:id\" component={ItemDetailed} />\n\t\t\t\t\t\t\t\t<ProtectedRoute exact path=\"/statistics\" component={() => <Statistics user={convertedUser}/>} />\n\t\t\t\t\t\t\t\t<ProtectedRoute exact path=\"/chat\" component={() => <ChatRoom user={convertedUser}/>} />\n\t\t\t\t\t\t\t\t<AuthorizedRoute exact roles={[\"Manager\", \"Admin\"]} path=\"/management\" component={() => <Management user={convertedUser}/>} />\n\t\t\t\t\t\t\t\t<Route exact path=\"/login\" component={() => <Login setUser={setUser}/>} />\n\t\t\t\t\t\t\t\t<Route exact path=\"/register\" component={Register} />\n\t\t\t\t\t\t\t\t<Redirect to=\"/\" />\n\t\t\t\t\t\t\t</Switch>\n\t\t\t\t\t</ScrollToTop>\n\t\t\t\t<Footer/>\n\t\t\t</div>\n\t\t</Router>\n\t)\n}\n\nexport default App;\n",["97","98"],"D:\\Archive\\University\\sem3\\ITS\\inventory-system-frontend\\src\\components\\header\\Nav.js",["99","100"],"import React, { useCallback, useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faBars } from '@fortawesome/free-solid-svg-icons'\r\nimport '../../App.css';\r\n\r\nimport Logo from '../../assets/images/squire-logo-inverted.webp';\r\n\r\n//  Importing components\r\n\r\nconst Nav = ({user, setUser}) => {\r\n\r\n    var acceptedRoles = [\"manager\", \"admin\"];\r\n\r\n    const [navButtons, setNavButtons] = useState(\r\n        (\r\n            <ul className=\"nav navbar-nav ml-auto\">\r\n                <li className=\"nav-item ml-auto\">\r\n                    <Link className=\"nav-link\" to='/login'>Log in</Link>\r\n                </li>\r\n                <li className=\"nav-item ml-auto\">\r\n                    <Link className=\"nav-link\" to='/register'>Register</Link>\r\n                </li>\r\n            </ul>\r\n        )\r\n    );\r\n\r\n    const handleLogout = useCallback(() => {\r\n        console.log(\"Logging out...\");\r\n        setUser(null);\r\n        localStorage.clear();\r\n    }, []);\r\n\r\n\r\n    useEffect(() => {\r\n        console.log(\"Refreshing nav\");\r\n        if (user == null) {\r\n            setNavButtons((\r\n                <ul className=\"nav navbar-nav ml-auto\">\r\n                    <li className=\"nav-item ml-auto\">\r\n                        <Link className=\"nav-link\" to='/login'>Log in</Link>\r\n                    </li>\r\n                    <li className=\"nav-item ml-auto\">\r\n                        <Link className=\"nav-link\" to='/register'>Register</Link>\r\n                    </li>\r\n                </ul>\r\n            ));   \r\n        } else {\r\n            setNavButtons((\r\n                <ul className=\"nav navbar-nav ml-auto\">\r\n                    <li className=\"nav-item ml-auto\">\r\n                        <Link className=\"nav-link\" to='/dashboard'>Dashboard</Link>\r\n                    </li>\r\n                    { (user !== null && acceptedRoles.includes(String(user.role).toLowerCase())) ?\r\n                    <>\r\n                        <li className=\"nav-item ml-auto\">\r\n                            <Link className=\"nav-link\" to='/statistics'>Statistics</Link>\r\n                        </li>\r\n                        <li className=\"nav-item ml-auto\">\r\n                            <Link className=\"nav-link\" to='/management'>Management</Link>\r\n                        </li>\r\n                    </>\r\n                    : ''\r\n                    }\r\n                    <li className=\"nav-item ml-auto\">\r\n                        <Link className=\"nav-link\" onClick={handleLogout} to='/'>Log out</Link>\r\n                    </li>\r\n                </ul>\r\n            ));\r\n        }\r\n    }, [user, handleLogout]);\r\n\r\n    return (\r\n    <nav className=\"navbar navbar-expand-md justify-content-end\">\r\n        <Link className=\"navbar-brand\" to='/'><img src={Logo} alt=\"Squire\" height=\"50\"/></Link>\r\n        <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarCollapse\" aria-controls=\"navbarCollapse\" aria-expanded=\"true\" aria-label=\"Toggle navigation\">\r\n            <span className=\"navbar-toggler-icon\">\r\n                <FontAwesomeIcon icon={faBars} style={{color: \"#fff\", fontSize: \"28px\"}}/>\r\n            </span>\r\n        </button>\r\n        <div className=\"navbar-collapse collapse show\" id=\"navbarCollapse\">\r\n            {navButtons}\r\n        </div>\r\n    </nav>\r\n    )\r\n};\r\n\r\nexport default Nav;","D:\\Archive\\University\\sem3\\ITS\\inventory-system-frontend\\src\\components\\pages\\Login.js",[],"D:\\Archive\\University\\sem3\\ITS\\inventory-system-frontend\\src\\components\\pages\\Register.js",[],"D:\\Archive\\University\\sem3\\ITS\\inventory-system-frontend\\src\\components\\pages\\Home.js",[],["101","102"],"D:\\Archive\\University\\sem3\\ITS\\inventory-system-frontend\\src\\index.js",[],["103","104"],"D:\\Archive\\University\\sem3\\ITS\\inventory-system-frontend\\src\\js\\ScrollToTop.js",["105"],"import React, { useEffect, Fragment } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nfunction ScrollToTop({ history, children }) {\r\n  useEffect(() => {\r\n    const unlisten = history.listen(() => {\r\n      window.scrollTo(0, 0);\r\n    });\r\n    return () => {\r\n      unlisten();\r\n    }\r\n  }, []);\r\n\r\n  return <Fragment>{children}</Fragment>;\r\n}\r\n\r\nexport default withRouter(ScrollToTop);",["106","107"],"D:\\Archive\\University\\sem3\\ITS\\inventory-system-frontend\\src\\components\\pages\\Dashboard.js",["108","109"],"import React, { useState, useEffect, useCallback } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faPlus } from '@fortawesome/free-solid-svg-icons'\r\nimport { Modal, Button } from 'react-bootstrap';\r\n\r\nimport Item from '../Item';\r\nimport SearchBox from '../SearchBox';\r\n\r\nimport EmptyListIcon from '../../assets/svg/empty-list.svg';\r\n\r\nconst Dashboard = ({user}) => {\r\n    const [items, setItems] = useState([]);\r\n\r\n    const [itemName, setItemName] = useState('');\r\n    const [itemQuantity, setItemQuantity] = useState('');\r\n\r\n    const clearState = () => {\r\n        setItemName('');\r\n        setItemQuantity('');\r\n    }\r\n\r\n    const [showAddModal, setShowAddModal] = useState(false);\r\n    const [showEditModal, setShowEditModal] = useState(false);\r\n    const [showDeleteModal, setShowDeleteModal] = useState(false);\r\n    \r\n    const [currentItemId, setCurrentItemId] = useState(null);\r\n\r\n    // Filters\r\n    const [searchFilter, setSearchFilter] = useState('');\r\n\r\n    let filteredContent = [];\r\n\r\n    const handleAddItem = (e) => {\r\n        e.preventDefault();\r\n\r\n        let warehouseId = (user.warehouseId == null) ? '' : user.warehouseId;\r\n        fetch(`http://localhost:9090/inventory/items/${warehouseId}`, {\r\n        mode: 'cors',\r\n        method: 'POST',\r\n        headers: new Headers({\r\n            'Authorization': `Bearer ${localStorage.getItem('token')}`,\r\n            'Content-Type': \"application/json; charset=utf-8\",\r\n        }),\r\n        body: JSON.stringify({\r\n            name: itemName,\r\n            quantity: itemQuantity,\r\n        })\r\n        })\r\n        .then(res => {\r\n            console.log(res);\r\n            if (res.ok) {\r\n                clearState();\r\n            }\r\n        })\r\n        .catch(err => {\r\n            console.error('Caught error: ', err);\r\n        })\r\n\r\n        setShowAddModal(false);\r\n        setTimeout(() => { refreshItemList(); }, 2000);\r\n    }\r\n\r\n    const handleEditItem = (e) => {\r\n        e.preventDefault();\r\n\r\n        if(currentItemId !== null) {\r\n            fetch(`http://localhost:9090/inventory/items/${currentItemId}`, {\r\n            method: 'PUT',\r\n            mode: 'cors',\r\n            headers: new Headers({\r\n            'Authorization': `Bearer ${localStorage.getItem('token')}`,\r\n            'Content-Type': \"application/json; charset=utf-8\",\r\n            }),\r\n            body: JSON.stringify({\r\n                name: itemName,\r\n                quantity: itemQuantity,\r\n            })\r\n            })\r\n            .catch(err => {\r\n                console.error('Caught error: ', err);\r\n            })\r\n        }\r\n\r\n        setCurrentItemId(null);\r\n        setShowEditModal(false);\r\n        setTimeout(() => { refreshItemList(); }, 2000);\r\n    }\r\n\r\n    const deleteItem = useCallback((id) => {\r\n        console.log(\"delete item\");\r\n        if(id !== null) {\r\n            fetch(`http://localhost:9090/inventory/items/${id}`, {\r\n            method: 'DELETE',\r\n            mode: 'cors',\r\n            headers: new Headers({\r\n            'Authorization': `Bearer ${localStorage.getItem('token')}`,\r\n            'Accept': 'application/json',\r\n            }) \r\n            })\r\n            .catch(err => {\r\n                console.error('Caught error: ', err);\r\n            })\r\n        }\r\n        \r\n        setCurrentItemId(null);\r\n        setShowDeleteModal(false);\r\n        setTimeout(() => { refreshItemList(); }, 2000);\r\n    }, []);\r\n\r\n\r\n    const refreshItemList = () => {\r\n        if (user) {\r\n            let warehouseId = (user.warehouseId == null) ? '' : user.warehouseId;\r\n            fetch(`http://localhost:9090/inventory/items/${warehouseId}`, {\r\n                method: 'GET',\r\n                mode: 'cors',\r\n                headers: new Headers({\r\n                'Authorization': `Bearer ${localStorage.getItem('token')}`,\r\n                'Accept': 'application/json',\r\n                }) \r\n            })\r\n            .then(res => {\r\n                if(res.ok) return res.json();\r\n                else {\r\n                    return [];\r\n                }\r\n            } )\r\n            .then((data) => {\r\n                console.log(\"Retreiving item\");\r\n                setItems(data);\r\n            }).catch(err => {\r\n                localStorage.clear();\r\n                console.error('Caught error: ', err);\r\n            })\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        refreshItemList();\r\n    }, [])\r\n\r\n    filteredContent = items.filter( (item) => ( item.name.toLocaleLowerCase().indexOf(searchFilter.toLocaleLowerCase()) !== -1));\r\n\r\n    return (\r\n    <section className=\"page-wrapper dashboard-background\">\r\n        {/* Add item modal */}\r\n        <Modal show={showAddModal} onHide={() => setShowAddModal(false)}>\r\n            <Modal.Header closeButton>\r\n                <Modal.Title>New item</Modal.Title>\r\n            </Modal.Header>\r\n            <form onSubmit={handleAddItem}>\r\n            <Modal.Body>\r\n                <div className=\"input-group\">\r\n                    <input className=\"input--style-3\" type=\"text\" placeholder=\"Name\" onChange={e => setItemName(e.target.value)}/>\r\n                </div>\r\n                <div className=\"input-group\">\r\n                    <input className=\"input--style-3\" type=\"text\" placeholder=\"Quantity\" onChange={e => setItemQuantity(e.target.value)}/>\r\n                </div>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button variant=\"secondary\" onClick={() => setShowAddModal(false)}>\r\n                    Cancel\r\n                </Button>\r\n                <Button type=\"submit\" variant=\"success\" onClick={() => setShowAddModal(false)}>\r\n                    Add\r\n                </Button>\r\n            </Modal.Footer>\r\n            </form>\r\n        </Modal>\r\n        {/* Edit item modal */}\r\n        <Modal show={showEditModal} onHide={() => setShowEditModal(false)}>\r\n            <Modal.Header closeButton>\r\n                <Modal.Title>Editing item</Modal.Title>\r\n            </Modal.Header>\r\n            <form onSubmit={handleEditItem}>\r\n            <Modal.Body>\r\n                <div className=\"input-group\">\r\n                    <input className=\"input--style-3\" type=\"text\" placeholder=\"Name\" onChange={e => setItemName(e.target.value)}/>\r\n                </div>\r\n                <div className=\"input-group\">\r\n                    <input className=\"input--style-3\" type=\"text\" placeholder=\"Quantity\" onChange={e => setItemQuantity(e.target.value)}/>\r\n                </div>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button variant=\"secondary\" onClick={() => setShowEditModal(false)}>\r\n                    Cancel\r\n                </Button>\r\n                <Button type=\"submit\" variant=\"success\" onClick={() => setShowEditModal(false)}>\r\n                    Save\r\n                </Button>\r\n            </Modal.Footer>\r\n            </form>\r\n        </Modal>\r\n        {/* Delete item modal */}\r\n        <Modal show={showDeleteModal} onHide={() => setShowDeleteModal(false)}>\r\n            <Modal.Header closeButton>\r\n                <Modal.Title>Delete Confirmation</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>Do you really want to delete this item?</Modal.Body>\r\n            <Modal.Footer>\r\n                <Button variant=\"secondary\" onClick={() => setShowDeleteModal(false)}>\r\n                    Cancel\r\n                </Button>\r\n                <Button variant=\"danger\" onClick={() => deleteItem(currentItemId)}>\r\n                    Delete\r\n                </Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n\r\n        <p className=\"text-white bg-success\">\r\n                Warehouse ID: {(!user || !(\"warehouseId\" in user)) ? 'Empty' : user.warehouseId}<br/>\r\n                Role: {(!user || !(\"role\" in user)) ? 'Empty' : user.role}\r\n        </p>\r\n        <div className=\"d-flex align-middle mr-1\">\r\n            <div className=\"col\">\r\n                <SearchBox placeholder=\"Search for item\" searchFunc={(e) => setSearchFilter(e.target.value)}/>\r\n            </div>\r\n            <div className=\"col d-flex justify-content-end\">\r\n                <button className=\"btn btn-outline-success btn-sm mr-1 d-flex align-items-center\" onClick={() => setShowAddModal(true)}>\r\n                        <FontAwesomeIcon icon={faPlus} style={{color: \"bg-success\", fontSize: \"20px\", marginRight: \"5px\"}}/>\r\n                        Add item\r\n                </button>\r\n            </div>\r\n        </div>\r\n        <div className=\"container-fluid m-3\">\r\n            <div className=\"row d-flex align-items-start\">\r\n                <div className=\"col\">\r\n                    {\r\n                    (filteredContent.length > 0) ?\r\n                    filteredContent.map((item, index) => (<Item key={item.id} id={item.id} whIndex={index++} name={item.name} quantity={item.quantity} setShowDeleteModal={setShowDeleteModal} setShowEditModal={setShowEditModal} setItemId={setCurrentItemId}/>))\r\n                    :\r\n                    <div className=\"container-fluid\">\r\n                        <div className=\"row justify-content-center mt-5\">\r\n                            <img src={EmptyListIcon} alt=\"Empty List Icon\" height=\"200px\"/>\r\n                        </div>\r\n                        <div className=\"row justify-content-center\">\r\n                            <h3>Empty list</h3>\r\n                        </div>\r\n                        <div className=\"row justify-content-center mt-2\">\r\n                            <button className=\"btn btn-outline-success btn-sm d-flex align-items-center\" onClick={() => setShowAddModal(true)}>\r\n                                <FontAwesomeIcon icon={faPlus} style={{color: \"bg-success\", fontSize: \"20px\", marginRight: \"5px\"}}/>\r\n                                Add item\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>  \r\n    </section>\r\n    );\r\n};\r\n\r\nexport default Dashboard;","D:\\Archive\\University\\sem3\\ITS\\inventory-system-frontend\\src\\components\\Item.js",[],"D:\\Archive\\University\\sem3\\ITS\\inventory-system-frontend\\src\\ProtectedRoute.js",[],["110","111"],"D:\\Archive\\University\\sem3\\ITS\\inventory-system-frontend\\src\\authentication\\auth.js",[],"D:\\Archive\\University\\sem3\\ITS\\inventory-system-frontend\\src\\serviceWorker.js",[],"D:\\Archive\\University\\sem3\\ITS\\inventory-system-frontend\\src\\components\\footer\\Footer.js",["112"],"D:\\Archive\\University\\sem3\\ITS\\inventory-system-frontend\\src\\components\\SearchBox.js",[],"D:\\Archive\\University\\sem3\\ITS\\inventory-system-frontend\\src\\AuthorizedRoute.js",[],["113","114"],"D:\\Archive\\University\\sem3\\ITS\\inventory-system-frontend\\src\\components\\pages\\Management.js",[],"D:\\Archive\\University\\sem3\\ITS\\inventory-system-frontend\\src\\components\\pages\\Statistics.js",[],"D:\\Archive\\University\\sem3\\ITS\\inventory-system-frontend\\src\\components\\pages\\ItemDetailed.js",["115"],"D:\\Archive\\University\\sem3\\ITS\\inventory-system-frontend\\src\\components\\Chat.js",["116"],"D:\\Archive\\University\\sem3\\ITS\\inventory-system-frontend\\src\\components\\ChatMessage.js",[],"D:\\Archive\\University\\sem3\\ITS\\inventory-system-frontend\\src\\components\\pages\\ChatRoom.js",[],{"ruleId":"117","severity":1,"message":"118","line":56,"column":8,"nodeType":"119","endLine":56,"endColumn":14,"suggestions":"120"},{"ruleId":"121","replacedBy":"122"},{"ruleId":"123","replacedBy":"124"},{"ruleId":"117","severity":1,"message":"125","line":32,"column":8,"nodeType":"119","endLine":32,"endColumn":10,"suggestions":"126"},{"ruleId":"117","severity":1,"message":"127","line":71,"column":8,"nodeType":"119","endLine":71,"endColumn":28,"suggestions":"128"},{"ruleId":"121","replacedBy":"129"},{"ruleId":"123","replacedBy":"130"},{"ruleId":"121","replacedBy":"131"},{"ruleId":"123","replacedBy":"132"},{"ruleId":"117","severity":1,"message":"133","line":12,"column":6,"nodeType":"119","endLine":12,"endColumn":8,"suggestions":"134"},{"ruleId":"121","replacedBy":"135"},{"ruleId":"123","replacedBy":"136"},{"ruleId":"117","severity":1,"message":"137","line":108,"column":8,"nodeType":"119","endLine":108,"endColumn":10,"suggestions":"138"},{"ruleId":"117","severity":1,"message":"139","line":140,"column":8,"nodeType":"119","endLine":140,"endColumn":10,"suggestions":"140"},{"ruleId":"121","replacedBy":"141"},{"ruleId":"123","replacedBy":"142"},{"ruleId":"143","severity":1,"message":"144","line":2,"column":10,"nodeType":"145","messageId":"146","endLine":2,"endColumn":14},{"ruleId":"121","replacedBy":"147"},{"ruleId":"123","replacedBy":"148"},{"ruleId":"117","severity":1,"message":"149","line":43,"column":8,"nodeType":"119","endLine":43,"endColumn":10,"suggestions":"150"},{"ruleId":"117","severity":1,"message":"151","line":38,"column":8,"nodeType":"119","endLine":38,"endColumn":10,"suggestions":"152"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'authenticateUser'. Either include it or remove the dependency array.","ArrayExpression",["153"],"no-native-reassign",["154"],"no-negated-in-lhs",["155"],"React Hook useCallback has a missing dependency: 'setUser'. Either include it or remove the dependency array. If 'setUser' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["156"],"React Hook useEffect has a missing dependency: 'acceptedRoles'. Either include it or remove the dependency array.",["157"],["154"],["155"],["154"],["155"],"React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["158"],["154"],["155"],"React Hook useCallback has a missing dependency: 'refreshItemList'. Either include it or remove the dependency array.",["159"],"React Hook useEffect has a missing dependency: 'refreshItemList'. Either include it or remove the dependency array.",["160"],["154"],["155"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar",["154"],["155"],"React Hook useEffect has missing dependencies: 'fetchItem' and 'match.params.id'. Either include them or remove the dependency array.",["161"],"React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array.",["162"],{"desc":"163","fix":"164"},"no-global-assign","no-unsafe-negation",{"desc":"165","fix":"166"},{"desc":"167","fix":"168"},{"desc":"169","fix":"170"},{"desc":"171","fix":"172"},{"desc":"171","fix":"173"},{"desc":"174","fix":"175"},{"desc":"176","fix":"177"},"Update the dependencies array to be: [authenticateUser, user]",{"range":"178","text":"179"},"Update the dependencies array to be: [setUser]",{"range":"180","text":"181"},"Update the dependencies array to be: [user, handleLogout, acceptedRoles]",{"range":"182","text":"183"},"Update the dependencies array to be: [history]",{"range":"184","text":"185"},"Update the dependencies array to be: [refreshItemList]",{"range":"186","text":"187"},{"range":"188","text":"187"},"Update the dependencies array to be: [fetchItem, match.params.id]",{"range":"189","text":"190"},"Update the dependencies array to be: [user]",{"range":"191","text":"192"},[1642,1648],"[authenticateUser, user]",[1049,1051],"[setUser]",[2673,2693],"[user, handleLogout, acceptedRoles]",[306,308],"[history]",[3435,3437],"[refreshItemList]",[4427,4429],[1372,1374],"[fetchItem, match.params.id]",[1349,1351],"[user]"]